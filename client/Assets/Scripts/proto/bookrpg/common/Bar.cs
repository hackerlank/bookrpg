///
/// Generated by bookproto
/// Do't modify this file directly, new partial class file instead.
///
using System;
using System.IO;
using System.Collections.Generic;
using bookrpg.net;
using bookrpg.net.protobuf;

namespace bookrpg.common 
{
	public partial class Bar : NetMessage 
    {
		private int _sint32_field;
		public  int sint32_field 
		{
			get{return _sint32_field;}
			set{_sint32_field = value;_hasSint32_field=true;}
		}

        private bool _hasSint32_field = false;
        public  bool hasSint32_field {get{return _hasSint32_field;}}
		public  void clearSint32_field() {_hasSint32_field=false;}

		private List<double> _double_field;
		public  List<double> double_field 
		{
			get{return _double_field;}
			set{_double_field = value;_hasDouble_field=true;}
		}

        private bool _hasDouble_field = false;
        public  bool hasDouble_field {get{return _hasDouble_field && _double_field!=null && _double_field.Count>0;}}
        public  void clearDouble_field() {double_field=null; _hasDouble_field=false;}


		public override void ParseFrom(ByteArray stream)
		{
			base.ParseFrom(stream);
			
            int sint32_fieldCount = 0;

            while (stream.bytesAvailable > 0)
            {
                var tag = ReadUtils.ReadTag(stream);
                switch (tag.number)
                {
                	case 0:
                        throw new ProtobufException("Invalid field id: 0, wrong stream");
                    case 1:
						this.sint32_field = ReadUtils.Read_TYPE_SINT32(stream);
						sint32_fieldCount++;
                        break;
                    case 2:
						if (this.double_field == null) {
							this.double_field = new List<double>();
						}
						this.double_field.Add(ReadUtils.Read_TYPE_DOUBLE(stream));
                        break;
					default:
                        ReadUtils.Skip(stream, tag.wireType);
                        break;
                }
            }

            if (sint32_fieldCount == 0) {
                throw new ProtobufException("Required field sint32_field not readed");
            }
		}

		public override void WriteTo(ByteArray stream)
		{
			base.WriteTo(stream);

			if (this.hasSint32_field ) {
                WriteUtils.WriteTag(stream, WireType.Varint, 1);
                WriteUtils.Write_TYPE_SINT32(stream, this.sint32_field); 
			} else {
                throw new ProtobufException("Required field sint32_field not set");
            }

			if (this.hasDouble_field) {
				foreach (var item in this.double_field)
                {
                    WriteUtils.WriteTag(stream, WireType.Fixed64, 2);
                    WriteUtils.Write_TYPE_DOUBLE(stream, item); 
                }
			}

		}

    
    }
}