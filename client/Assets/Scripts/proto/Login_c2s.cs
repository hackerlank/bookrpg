///
/// Generated by bookproto
/// Do't modify this file directly, new partial class file instead.
///
using System;
using System.IO;
using System.Collections.Generic;
using bookrpg.net;
using bookrpg.net.protobuf;
using bookrpg.utils;

	public partial class Login_c2s : Message 
    {
		private string _username;
		public  string username 
		{
			get{return _username;}
			set{_username = value;_hasUsername=true;}
		}

        private bool _hasUsername = false;
        public  bool hasUsername {get{return _hasUsername;}}
		public  void clearUsername() {_hasUsername=false;}

		private string _password;
		public  string password 
		{
			get{return _password;}
			set{_password = value;_hasPassword=true;}
		}

        private bool _hasPassword = false;
        public  bool hasPassword {get{return _hasPassword;}}
		public  void clearPassword() {_hasPassword=false;}


		public override void Deserialize(ByteArray stream)
		{
			base.Deserialize(stream);
			
            int usernameCount = 0;
            int passwordCount = 0;

            while (stream.bytesAvailable > 0)
            {
                var tag = ReadUtils.ReadTag(stream);
                switch (tag.number)
                {
                	case 0:
                        throw new ProtobufException("Invalid field id: 0, wrong stream");
                    case 1:
						this.username = ReadUtils.Read_TYPE_STRING(stream);
						usernameCount++;
                        break;
                    case 2:
						this.password = ReadUtils.Read_TYPE_STRING(stream);
						passwordCount++;
                        break;
					default:
                        ReadUtils.Skip(stream, tag.wireType);
                        break;
                }
            }

            if (usernameCount == 0) {
                throw new ProtobufException("Required field username not readed");
            }
            if (passwordCount == 0) {
                throw new ProtobufException("Required field password not readed");
            }
		}

		public override ByteArray Serialize(ByteArray stream=null, bool skipHead = false)
		{
			stream = base.Serialize(stream, skipHead);

			if (this.hasUsername ) {
                WriteUtils.WriteTag(stream, WireType.LengthDelimited, 1);
                WriteUtils.Write_TYPE_STRING(stream, this.username); 
			} else {
                throw new ProtobufException("Required field username not set");
            }

			if (this.hasPassword ) {
                WriteUtils.WriteTag(stream, WireType.LengthDelimited, 2);
                WriteUtils.Write_TYPE_STRING(stream, this.password); 
			} else {
                throw new ProtobufException("Required field password not set");
            }


			return stream;
		}

    
    }
