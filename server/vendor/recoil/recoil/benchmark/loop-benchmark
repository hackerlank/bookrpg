#!/usr/bin/env php
<?php
require dirname(__DIR__) . '/vendor/autoload.php';

define('ITERATIONS', 10000);

use React\EventLoop\Factory;
use Recoil\Recoil;

function runBenchmark($name, callable $work)
{
    printf('-- %s --' . PHP_EOL, $name);

    $start = microtime(true);

    $work();

    $end = microtime(true);

    printf('Iterations:   %s' . PHP_EOL, ITERATIONS);
    printf('Elapsed Time: %s' . PHP_EOL, $end - $start);
    printf(PHP_EOL);
}

if (!ini_get('xdebug.profiler_enable')) {
    runBenchmark(
        'react - futureTick',
        function () {
            $loop = Factory::create();

            $remaining = ITERATIONS;
            $go = null;
            $go = function () use ($loop, &$remaining, &$go) {
                if ($remaining--) {
                    $loop->futureTick($go);
                }
            };

            $go();

            $loop->run();
        }
    );
}

runBenchmark(
    'recoil - futureTick via cooperative yield',
    function () {
        Recoil::run(
            function () {
                for ($i = 0; $i < ITERATIONS; ++$i) {
                    yield;
                }
            }
        );
    }
);
